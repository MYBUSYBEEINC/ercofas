@model NetStarter.Models.UserInRoleListing
@using NetStarter.Resources
<thead class="table-light">
    <tr>
        <th class="thead">@Html.DisplayNameFor(model => model.Listing[0].Username)</th>
        <th class="thead">@Html.DisplayNameFor(model => model.Listing[0].FullName)</th>
    </tr>
</thead>
<tbody>
    @foreach (var item in Model.Listing)
    {
        <tr>
            <td>
                <a class="fw600 color-primarycolor hover-color-secondarycolor" href="@Url.Action("viewrecord","user", new { Id = @Html.ValueFor(modelItem => item.UserProfileId) })">@Html.DisplayFor(modelItem => item.Username)</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
        </tr>
    }
</tbody>

<script>
    var fileName = '@Resource.ListOfUserWith' + ' ' + '@Model.RoleName' + ' ' + '@Resource.Role';
    //initialize datatable
    var table = $('#' + tableIdPrefix + '-table').DataTable({
        dom: 'Brtip',
        "pageLength": 10,
        //order: [[2, 'desc']],
        scrollY: 'auto',
        scrollX: 'auto',
        deferRender: true,
        scroller: true,
        buttons: [
            {
                extend: 'csv',
                title: fileName
            }, {
                extend: 'excel',
                title: fileName
            }, {
                extend: 'pdf',
                title: fileName
            }
        ]
    });

    $("#exportToExcel").click(function () {
        $(".buttons-excel").trigger("click");
    });
    $("#exportToPdf").click(function () {
        $(".buttons-pdf").trigger("click");
    });

    //initialize tooltip
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    })

    //event listener for search, reset, and "show 10 records" buttons
    document.getElementById("searchbtn").addEventListener("click", searchTable);
    document.getElementById("resetbtn").addEventListener("click", resetTable);

    function searchTable() {
        var valToSearch = document.getElementById("search").value;
        table.search(valToSearch).draw();
    }

    function resetTable() {
        document.getElementById("search").value = "";
        table.search("").draw();
    }

    //event listener for the "show 10 records" drop down list
    for (const option of document.querySelectorAll("#" + tableIdPrefix + "-tableDropDown .custom-option")) {
        option.addEventListener('click', function () {
            if (!this.classList.contains('selected')) {
                this.parentNode.querySelector('.custom-option.selected').classList.remove('selected');
                this.classList.add('selected');
                this.closest('.select').querySelector('.select__trigger span').textContent = this.textContent;
                let chosenValue = this.getAttribute("data-value");
                table.page.len(chosenValue).draw();
            }
        })
    }
</script>
