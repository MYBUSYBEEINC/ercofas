@model ERCOFAS.Models.PreFiledCaseViewModel
@using ERCOFAS.CustomHelper
@using ERCOFAS.Models
@using ERCOFAS.Resources
@using ERCOFAS.Helpers
@using ERCOFAS.Enumeration
@{
    var userRole = RoleHelpers.GetMainRole();

    if (userRole != null)
    {
        if (userRole == UserTypeEnum.Client.ToString())
        {
            ViewBag.Title = "Preview";
        }
        else if (userRole == UserTypeEnum.Admin.ToString() || userRole == UserTypeEnum.SuperAdmin.ToString())
        {
            if (Model.Id != null && Model.InitialReviewStatus != "Approved")
            {
                ViewBag.Title = "Initial Review";
            }
            else if (Model.Id != null || Model.InitialReviewStatus == "Approved" && Model.DocumentsUploadStatus != null)
            {
                ViewBag.Title = "Document Review";
            }
        }

    }
    ViewBag.Module = "Pre-Filed Case";
    Layout = "~/Views/Shared/_LayoutAfterLogin.cshtml";
}

<script src="https://cdn.jsdelivr.net/npm/pdfjs-dist@2.7.225/build/pdf.js"></script>

<section>
    <div class="row mt-2">
        <div class="col">
            <div class="bg-white mb-5 p-2 shadow rounded">
                <div class="row">
                    <div class="col-2 ps-4 d-flex align-items-center text-blue-green">
                        <h6>Notification Highlights</h6>
                    </div>
                    <div class="col px-0">
                        <div class="row mb-2">
                            <div class="col text-secondary"><strong>Pre-Filing Case</strong></div>
                            <div class="col d-flex align-items-center justify-content-end text-muted me-4"><small>[Date] [Time]</small></div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <p class="mb-0 text-muted">
                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="col-2 pe-0 d-flex align-items-center justify-content-center">
                        <button class="btn text-secondary rounded-circle border-secondary border-2 me-4"><strong><</strong></button>
                        <button class="btn text-secondary rounded-circle border-secondary border-2"><strong>></strong></button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <h3 class="erc-text-blue text-center mb-5">@ViewBag.Title</h3>

    <div class="row justify-content-center mt-2">
        <div class="col">
            <div class="card p-5 border-0 rounded">

                <div class="w-100 m-auto py-5">
                </div>

                <form id="msform">
                    <div class="border rounded p-2 px-4">
                        <h2 class="erc-text-blue mb-4">Profile</h2>
                        <div class="row">
                            <div class="col">
                                <figure class="figure">
                                    <a href="~/Assets/defaultProfilePicture.jpg" target="_blank" data-bs-toggle="tooltip" data-bs-placement="top" title="Click to Open Image in New Tab"><img src="~/Assets/defaultProfilePicture.jpg" class="figure-img img-fluid rounded" alt="Profile picture image"></a>
                                </figure>
                            </div>
                            <div class="col">
                                <div class="row">
                                    <div class="col erc-text-dark-blue">
                                        <strong>Name:</strong>
                                    </div>
                                    <div class="col text-secondary">
                                        @Model.FullName
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col erc-text-dark-blue">
                                        <strong>Position:</strong>
                                    </div>
                                    <div class="col text-secondary">
                                        @Model.UserType
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <div class="row">
                                    <div class="col erc-text-dark-blue">
                                        <strong>Email:</strong>
                                    </div>
                                    <div class="col text-secondary">
                                        <ul style="list-style-type:none;padding:0;">
                                            @if (Model.Emails != null)
                                            {
                                                foreach (var item in Model.Emails.Where(x => x.IsVerified))
                                                {
                                                    <li>@Html.DisplayFor(modelItem => item.EmailAddress)</li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <div class="row">
                                    <div class="col erc-text-dark-blue">
                                        <strong>Mobile No.:</strong>
                                    </div>
                                    <div class="col text-secondary">
                                        <ul style="list-style-type:none;padding:0;">
                                            @if (Model.MobileNumbers != null)
                                            {
                                                foreach (var item in Model.MobileNumbers.Where(x => x.IsVerified))
                                                {
                                                    <li>@Html.DisplayFor(modelItem => item.MobileNumber)</li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row justify-content-center mx-0 mt-3">
                        <div class="px-4 py-4 border rounded w-49">
                            <div class="row mb-2">
                                <div class="col erc-text-dark-blue">
                                    <strong class="me-2">Case Type: </strong>@Html.DisplayFor(model => model.CaseTypeId, new { htmlAttributes = new { @class = "form-control d-block" } })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col erc-text-dark-blue">
                                    <strong class="me-2">Case Nature: </strong>@Html.DisplayFor(model => model.CaseNatureId, new { htmlAttributes = new { @class = "form-control d-block" } })
                                </div>
                            </div>
                            <div class="border-bottom my-4"></div>
                            <table class="mb-6">
                                <thead>
                                    <tr>
                                        <th class="erc-text-dark-blue">Pre-Filing Application Form</th>
                                        <th class="text-center erc-text-dark-blue">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (userRole != null)
                                    {
                                        if (userRole == UserTypeEnum.Admin.ToString() || userRole == UserTypeEnum.SuperAdmin.ToString())
                                        {
                                            if (Model.PreFiledAttachmentViewModels != null && Model.PreFiledAttachmentViewModels.Count > 0)
                                            {
                                                foreach (var item in Model.PreFiledAttachmentViewModels)
                                                {
                                                    if (item.StatusId != "Remarks")
                                                    {
                                                        <tr>
                                                            <td class="text-secondary w-75">
                                                                @Html.DisplayFor(model => item.FileTypeName)
                                                            </td>
                                                            <td>
                                                                @if (item.StatusId == "Rejected")
                                                                {
                                                                    <span class="action-button-decline">Rejected</span>
                                                                }
                                                                else if (item.StatusId == "Approved")
                                                                {
                                                                    <span class="action-button-approve">Approved</span>
                                                                }
                                                                else if (item.StatusId == "Discarded")
                                                                {
                                                                    <span class="action-button-discard">Discarded</span>
                                                                }
                                                                else
                                                                {
                                                                    <span onclick="triggerApproveFileConfirmationModal('@item.FileTypeName', '@Url.Action("approvefile", new { id= item.Id, prefile = Model.Id})')" class="pop2 action-button-approve p-0 m-1">Approve</span>
                                                                    <span onclick="triggerRejectFileConfirmationModal('@item.FileTypeName', '@Url.Action("rejectfile", new { id = item.Id, prefile = Model.Id})')" class="pop2 action-button-decline p-0 m-1">Reject</span>
                                                                    <span onclick="triggerDiscardFileConfirmationModal('@item.FileTypeName', '@Url.Action("discardfile", new { id= item.Id, prefile = Model.Id})')" class="pop2 action-button-discard p-0 m-1">Discard</span>
                                                                }
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                            <div class="border-bottom my-4"></div>
                            <h2 class="erc-text-blue mb-4">Summary</h2>
                            <table>
                                <thead>
                                    <tr>
                                        <th class="erc-text-dark-blue ">List of Document submitted</th>
                                        <th class="text-center erc-text-dark-blue">Result</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.PreFiledAttachmentViewModels != null && Model.PreFiledAttachmentViewModels.Count > 0)
                                    {
                                        foreach (var item in Model.PreFiledAttachmentViewModels)
                                        {
                                            if (item.StatusId == "Approved")
                                            {
                                                <tr>
                                                    <td class="w-75 text-secondary">
                                                        @Html.DisplayFor(modelItem => item.FileTypeName)
                                                    </td>
                                                    <td class="text-center">
                                                        <span class="text-success">&#x2714;</span>
                                                    </td>
                                                </tr>

                                            }
                                            else if (item.StatusId == "Discarded")
                                            {
                                                <tr>
                                                    <td class="w-75 text-secondary">
                                                        @Html.DisplayFor(modelItem => item.FileTypeName)
                                                    </td>
                                                    <td class="text-center">
                                                        <span class="text-warning">-</span>
                                                    </td>
                                                </tr>
                                            }
                                            else if (item.StatusId != "Remarks")
                                            {
                                                <tr>
                                                    <td class="w-75 text-secondary">
                                                        @Html.DisplayFor(modelItem => item.FileTypeName)
                                                    </td>
                                                    <td class="text-center">
                                                        <span class="text-danger">&#x2715;</span>
                                                    </td>
                                                </tr>
                                            }

                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="ms-auto border rounded w-49">
                            <h2 class="erc-text-blue mx-2 my-2 mb-4">Submitted Documents</h2>
                            <div class="thumbnail-container">
                                @if (Model.PreFiledAttachmentViewModels != null && Model.PreFiledAttachmentViewModels.Count > 0)
                                {
                                    foreach (var item in Model.PreFiledAttachmentViewModels)
                                    {
                                        if (Path.GetExtension(item.FileName) == ".pdf" && item.StatusId != "Remarks")
                                        {
                                            <div class="thumbnail">

                                                <div class="align-items-center justify-content-center mb-4 row text-center">
                                                    <input hidden id="pdflinkvalue" value="~/Documents/@Html.DisplayFor(modelItem => item.UniqueFileName)" />
                                                    <a id="thispdfurl" href="~/Documents/@Html.DisplayFor(modelItem => item.UniqueFileName)" target="_blank">
                                                        <img style="height:70px" src="~/Assets/pre-filing-icons/pdf.svg"></img>
                                                    </a>
                                                    <label class="text-sm-center" style="font-size:12px">
                                                        @Html.DisplayFor(modelItem => item.FileTypeName)
                                                        @if (item.StatusId == "Approved")
                                                        {
                                                            <i class="fa fa-check-circle text-success fa-1x"></i>
                                                        }
                                                        else if (item.StatusId == "Rejected")
                                                        {
                                                            <i class="fa fa-multiply text-danger fa-1x dt-right"></i>

                                                        }
                                                    </label>
                                                </div>
                                            </div>

                                        }
                                        if (Path.GetExtension(item.FileName) == ".pptx" && item.StatusId != "Remarks")
                                        {
                                            <div class="thumbnail">

                                                <div class="align-items-center justify-content-center mb-4 row text-center">
                                                    <input hidden id="pdflinkvalue" value="~/Documents/@Html.DisplayFor(modelItem => item.UniqueFileName)" />
                                                    <a id="thispdfurl" href="~/Documents/@Html.DisplayFor(modelItem => item.UniqueFileName)" target="_blank">
                                                        <img style="height:70px" src="~/Assets/pre-filing-icons/ppt.svg"></img>

                                                    </a>
                                                    <label class="text-sm-center" style="font-size:12px">
                                                        @Html.DisplayFor(modelItem => item.FileTypeName)
                                                        @if (item.StatusId == "Approved")
                                                        {
                                                            <i class="fa fa-check-circle text-success fa-1x"></i>
                                                        }
                                                        else if (item.StatusId == "Rejected")
                                                        {
                                                            <i class="fa fa-multiply text-danger fa-1x dt-right"></i>

                                                        }
                                                    </label>
                                                </div>
                                            </div>

                                        }
                                        if (Path.GetExtension(item.FileName) == ".xlsx" && item.StatusId != "Remarks")
                                        {
                                            <div class="thumbnail">

                                                <div class="align-items-center justify-content-center mb-4 row text-center">
                                                    <input hidden id="pdflinkvalue" value="~/Documents/@Html.DisplayFor(modelItem => item.UniqueFileName)" />
                                                    <a id="thispdfurl" href="~/Documents/@Html.DisplayFor(modelItem => item.UniqueFileName)" target="_blank">
                                                        <img style="height:70px" src="~/Assets/pre-filing-icons/xlsx.svg"></img>

                                                    </a>
                                                    <label class="text-sm-center" style="font-size:12px">
                                                        @Html.DisplayFor(modelItem => item.FileTypeName)
                                                        @if (item.StatusId == "Approved")
                                                        {
                                                            <i class="fa fa-check-circle text-success fa-1x"></i>
                                                        }
                                                        else if (item.StatusId == "Rejected")
                                                        {
                                                            <i class="fa fa-multiply text-danger fa-1x dt-right"></i>

                                                        }
                                                    </label>
                                                </div>
                                            </div>

                                        }
                                        if (Path.GetExtension(item.FileName) == ".docx" && item.StatusId != "Remarks")
                                        {
                                            <div class="thumbnail">

                                                <div class="align-items-center justify-content-center mb-4 row text-center">
                                                    <input hidden id="pdflinkvalue" value="~/Documents/@Html.DisplayFor(modelItem => item.UniqueFileName)" />
                                                    <a id="thispdfurl" href="~/Documents/@Html.DisplayFor(modelItem => item.UniqueFileName)" target="_blank">
                                                        <img style="height:70px" src="~/Assets/pre-filing-icons/docx.svg"></img>

                                                    </a>
                                                    <label class="text-sm-center" style="font-size:12px">
                                                        @Html.DisplayFor(modelItem => item.FileTypeName)
                                                        @if (item.StatusId == "Approved")
                                                        {
                                                            <i class="fa fa-check-circle text-success fa-1x"></i>
                                                        }
                                                        else if (item.StatusId == "Rejected")
                                                        {
                                                            <i class="fa fa-multiply text-danger fa-1x dt-right"></i>

                                                        }
                                                    </label>
                                                </div>
                                            </div>

                                        }
                                        else if (Path.GetExtension(item.FileName) == ".jpg" && item.StatusId != "Remarks" ||
                                        Path.GetExtension(item.FileName) == ".jpeg" && item.StatusId != "Remarks" ||
                                        Path.GetExtension(item.FileName) == ".png" && item.StatusId != "Remarks" ||
                                        Path.GetExtension(item.FileName) == ".gif" && item.StatusId != "Remarks")
                                        {
                                            <div class="thumbnail">
                                                <div class="pop d-flex align-items-center justify-content-center mb-4 row">
                                                    <a href="#">
                                                        <img class="img-thumbnail" style="height:80px" src="~/Documents/@Html.DisplayFor(modelItem => item.UniqueFileName)">
                                                    </a>
                                                    <label class="text-sm-center" style="font-size:12px">
                                                        @Html.DisplayFor(modelItem => item.FileTypeName)
                                                        @if (item.StatusId == "Approved")
                                                        {
                                                            <i class="fa fa-check-circle text-success fa-1x"></i>
                                                        }
                                                        else if (item.StatusId == "Rejected")
                                                        {
                                                            <i class="fa fa-multiply text-danger fa-1x dt-right"></i>

                                                        }
                                                    </label>

                                                </div>
                                            </div>
                                        }
                                    }
                                }
                            </div>
                        </div>
                    </div>

                    <div class="border rounded mt-3 p-4">
                        <h2 class="erc-text-blue mb-4">Complete Documentation?</h2>
                        @if (userRole != null)
                        {
                            if (userRole == UserTypeEnum.Admin.ToString() || userRole == UserTypeEnum.SuperAdmin.ToString())
                            {
                                if (Model.InitialReviewStatus != "Approved")
                                {
                                    if (Model.PreFiledAttachmentViewModels != null && Model.PreFiledAttachmentViewModels.Count > 0)
                                    {
                                        string shouldDisplayRadioInputs = "Approved";

                                        foreach (var item in Model.PreFiledAttachmentViewModels)
                                        {
                                            foreach (var fileType in item.FileTypeName)
                                            {
                                                if (fileType.Equals("Application Form") || fileType.Equals("Certification Forum") || fileType.Equals("Authority Counsel") || fileType.Equals("Service Lgu") || fileType.Equals("Publication") || fileType.Equals("Notary Presented Id") || fileType.Equals("Authority Affiant"))
                                                {
                                                    item.StatusId = "Approved";
                                                    break;
                                                }
                                            }

                                            if (shouldDisplayRadioInputs == "Approved")
                                            {
                                                break;
                                            }
                                        }

                                        if (shouldDisplayRadioInputs == "Approved")
                                        {
                                            <div class="form-check" id="ai" style="cursor:pointer;">
                                                <input type="radio" value="Approved" id="ap" />
                                                <label for="complete-documentation" class="text-dark">
                                                    Yes <small class="text-muted ms-2">Approved (Endorse Application)</small>
                                                </label>
                                            </div>
                                            <div class="form-check" id="ri" style="cursor:pointer;">
                                                <input type="radio" value="Rejected" id="re" />
                                                <label for="complete-documentation" class="text-dark">
                                                    No <small class="text-muted ms-2">(Notify stakeholder for incomplete documents)</small>
                                                </label>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="form-check" id="rd" style="cursor:pointer;">
                                                <input type="radio" value="Rejected" id="re" />
                                                <label for="complete-documentation" class="text-dark">
                                                    No <small class="text-muted ms-2">(Notify stakeholder for incomplete documents)</small>
                                                </label>
                                            </div>
                                        }
                                    }
                                }
                                else if (Model.InitialReviewStatus == "Approved" && Model.DocumentsUploadStatus != "Approved")
                                {
                                    if (Model.PreFiledAttachmentViewModels != null && Model.PreFiledAttachmentViewModels.Count > 0)
                                    {
                                        string shouldDisplayRadioInputs = "Approved";

                                        foreach (var item in Model.PreFiledAttachmentViewModels)
                                        {
                                            foreach (var fileType in item.FileTypeName)
                                            {
                                                if (fileType.Equals("Application Form") || fileType.Equals("Certification Forum") || fileType.Equals("Authority Counsel") || fileType.Equals("Service Lgu") || fileType.Equals("Publication") || fileType.Equals("Notary Presented Id") || fileType.Equals("Authority Affiant"))
                                                {
                                                    item.StatusId = "Approved";
                                                    break;
                                                }
                                            }

                                            if (shouldDisplayRadioInputs == "Approved")
                                            {
                                                break;
                                            }
                                        }

                                        if (shouldDisplayRadioInputs == "Approved")
                                        {
                                            <div class="form-check" id="ad" style="cursor:pointer;">
                                                <input type="radio" value="Approved" id="ap" />
                                                <label for="complete-documentation" class="text-dark">
                                                    Yes <small class="text-muted ms-2">Approved</small>
                                                </label>
                                            </div>
                                            <div class="form-check" id="rd" style="cursor:pointer;">
                                                <input type="radio" value="Rejected" id="re" />
                                                <label for="complete-documentation" class="text-dark">
                                                    No <small class="text-muted ms-2">(Notify stakeholder for incomplete documents)</small>
                                                </label>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="form-check" id="rd" style="cursor:pointer;">
                                                <input type="radio" value="Rejected" id="re" />
                                                <label for="complete-documentation" class="text-dark">
                                                    No <small class="text-muted ms-2">(Notify stakeholder for incomplete documents)</small>
                                                </label>
                                            </div>
                                        }
                                    }

                                }
                                else if (Model.InitialReviewStatus == "Approved" && Model.DocumentsUploadStatus == "Approved")
                                {
                                    <h5 class="badge btn-success">For Payment</h5>
                                }
                            }
                        }

                        <div class="border-bottom my-4"></div>
                        <div class="m-auto">
                            <h5>Remarks</h5>
                            @if (userRole != null)
                            {
                                if (userRole == UserTypeEnum.Admin.ToString() || userRole == UserTypeEnum.SuperAdmin.ToString())
                                {
                                    @Html.TextArea("Remarks", new { @class = "border rounded w-100 p-4 mt-4", @rows = "5", id = "Remarks" })

                                }
                                else if (userRole == UserTypeEnum.Client.ToString())
                                {
                                    @Html.DisplayFor(model => model.Remarks)
                                }
                            }
                        </div>
                        <br />
                        @if (userRole != null)
                        {
                            if (userRole == UserTypeEnum.Admin.ToString() || userRole == UserTypeEnum.SuperAdmin.ToString())
                            {
                                <h2 class="erc-text-blue mb-4">Upload Remarks File</h2>
                                <input type="file" id="fileToUpload" class="form-control" multiple="multiple" />
                            }
                        }
                        <br />
                        <h2 class="erc-text-blue mb-4">Remarks File</h2>
                        <table>
                            <thead>
                                <tr>
                                    <th class="erc-text-dark-blue ">Filename</th>
                                    @if (userRole != null)
                                    {
                                        if (userRole == UserTypeEnum.Admin.ToString() || userRole == UserTypeEnum.SuperAdmin.ToString())
                                        {
                                            <th class="text-center erc-text-dark-blue">Action</th>
                                        }
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Attachments != null && Model.Attachments.Count > 0)
                                {
                                    foreach (var item in Model.Attachments)
                                    {
                                        if (item.StatusId == "Remarks")
                                        {
                                            <tr>
                                                <td class="w-75 text-secondary">
                                                    Remarks File
                                                    @Html.HiddenFor(modelItem => item.UniqueFileName, new { @id = "uf" })
                                                </td>
                                                @if (userRole != null)
                                                {
                                                    if (userRole != UserTypeEnum.Client.ToString())
                                                    {
                                                        <td class="text-center">
                                                            <a hidden href="@Url.Action("deleteremarksfile", new { Id = item.Id, prefileId = Model.Id})">
                                                                <i class="fa fa-trash-can text-danger"></i>
                                                            </a>
                                                            <span style="margin:5px;"> </span>
                                                            <a href="javascript:void(0)" type="button" id="filebt">
                                                                <i class="fa fa-download text-success"></i>
                                                            </a>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td class="text-center">
                                                            <a href="javascript:void(0)" type="button" id="filebt">
                                                                <i class="fa fa-download text-success"></i>
                                                            </a>
                                                        </td>
                                                    }
                                                }
                                            </tr>
                                        }
                                    }
                                }
                            </tbody>
                        </table>
                        <br />
                        @if (Model.Id != null && Model.InitialReviewStatus != "Approved")
                        {<h2 class="erc-text-blue mb-4">History</h2>
                        }
                        @if (Model.Id != null && Model.InitialReviewStatus != "Approved")
                        {
                            <table>
                                <thead>
                                    <tr>
                                        <th class="erc-text-dark-blue ">Remarks</th>
                                        <th class="erc-text-dark-blue ">Created By</th>
                                        <th class="erc-text-dark-blue ">Created On</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.CaseLogs != null && Model.CaseLogs.Count > 0)
                                    {
                                        foreach (var item in Model.CaseLogs)
                                        {
                                            <tr>
                                                <td>@Html.DisplayFor(modelItem => item.Remarks)</td>
                                                <td>@Html.DisplayFor(modelItem => item.CreatedBy)</td>
                                                <td>@Html.DisplayFor(modelItem => item.CreatedOn)</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        }
                        else if (Model.Id != null || Model.InitialReviewStatus == "Approved" && Model.DocumentsUploadStatus != null)
                        {
                            ViewBag.Title = "Document Review";
                        }

                    </div>

                    @Html.HiddenFor(model => model.Id)
                <div class="float-end mt-4">
                    <a class="btn btn-p8 bg-light hover-boxshadow me-1" href="@Url.Action("index","PreFiledCase")" style="background-color:white;">Back to List</a>
                    @if (userRole == UserTypeEnum.Admin.ToString() || userRole == UserTypeEnum.SuperAdmin.ToString())
                    {
                        if (Model.DocumentsUploadStatus == "Approved" && Model.InitialReviewStatus == "Approved")
                        {
                        }
                        else
                        {
                            <a id="tss" class="action-button"> Submit </a>

                        }
                    }
                </div>
                </form>
            </div>
        </div>
    </div>
    <!-- image modal -->
    <div class="modal fade" id="imagemodal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content border-0">
                <div class="mx-2 mt-2">
                    <button type="button" class="btn float-end  p-2" data-dismiss="modal" id="closeMediaModal"><strong>&#10005;</strong></button>
                </div>
                <div class="modal-body text-center">
                    <img id="img-id" class="imagepreview">
                </div>
                <div class="modal-footer d-flex justify-content-center">
                    <button id="download-button" class="btn btn-primary text-white">Download Image</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="cmodal" tabindex="-1" aria-hidden="true" data-bs-keyboard="false" data-bs-backdrop="static">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header border-0 pt-4">
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body border-0 pb-4">
                    <div class="mt-2 text-center">
                        <i class="cmodalicon fa-solid fa-5x"></i>
                        <div class="mt-3 pt-2 fs-15 mx-4 mx-sm-5">
                            <h4 class="fs-22 fw600">Are you sure you want to <span id="getfilestatus" class="saver"></span> this</h4>

                            <input hidden id="getidOf" />
                            <h5 class="fs-20"><span class="ftnm" id="getfilename"></span></h5>
                            <p class="fs-15 text-muted mx-3 mb-0 pt-1">You cannot change after you confirm</p>
                        </div>
                    </div>
                    <div class="d-flex gap-2 justify-content-center mt-4 mb-3">
                        <button type="button" class="btn small btn-light hover-boxshadow" data-bs-dismiss="modal">@Resource.Cancel</button>
                        <a href="javascript:void(0)" class="saverbtn btn small hover-boxshadow"></a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="successupload" tabindex="-1" aria-hidden="true" data-bs-keyboard="false" data-bs-backdrop="static">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header border-0 pt-4">
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body border-0 pb-4">
                    <div class="mt-2 text-center">
                        <i class="fa fa-check fa-solid text-success fa-5x"></i>
                        <div class="mt-3 pt-2 fs-15 mx-4 mx-sm-5">
                            <h4 class="fs-22 fw600 text-success">Successfully submitted a review!</h4>
                        </div>
                    </div>
                    <div class="d-flex gap-2 justify-content-center mt-4 mb-3">
                        <a href="javascript:void(0)" class="btn btn-success hover-boxshadow" id="reloadthis">Confirm</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="pdfmods" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content border-0">
                <div class="mx-2 mt-2">
                    <button type="button" class="btn float-end  p-2" data-dismiss="modal" id="closeMediaModal"><strong>&#10005;</strong></button>
                </div>
                <div class="modal-body text-center">
                    <embed id="embedfile" frameborder="0" width="100%" height="400px">
                </div>
                <div class="modal-footer d-flex justify-content-center">
                    <button type="button" class="btn small btn-light hover-boxshadow" data-bs-dismiss="modal">Close</button>
                    <button id="filebt" class="btn btn-primary text-white">Download File</button>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts{
    <script src="https://mozilla.github.io/pdf.js/build/pdf.js"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.0.943/pdf.min.js">
    </script>
    <script>

        $(function () {
            var pdfurl = $("#pdflinkvalue").val();

            pdfjsLib.getDocument(pdfurl).then((pdf) => {

                myState.pdf = pdf;
                render();
            });
            function render() {
                myState.pdf.getPage(myState.currentPage).then((page) => {

                    var canvas = document.getElementById("pdfRenderer");
                    var ctx = canvas.getContext('2d');

                    var viewport = page.getViewport(myState.zoom);
                    canvas.width = viewport.width;
                    canvas.height = viewport.height;

                    page.render({
                        canvasContext: ctx,
                        viewport: viewport
                    });
                });
            }
        })


        $("#filemod").click(function () {
            $("#pdfmods").modal("show");
            var file = $("#pdffile").val();
            var srcfile = "~/Documents/" + file;
            $('#embedfile').attr('src', srcfile);

        });

        $('#filebt').click(function () {
            var fileName = $("#uf").val();

            if (fileName === "") {
                alert("Unable to download, the file is empty.");
                return;
            }

            downloadFile(fileName);
        });

        function downloadFile(fileName) {

            $.ajax({
                type: "POST",
                url: "/PreFiledCase/DownloadFile",
                data: { fileName: fileName },
                //xhrFields: {
                //    responseType: 'blob'
                //},
                success: function (data) {

                    // get the file name to download.
                    const blob = new Blob([data], { type: 'application/octetstream' });
                    var a = document.createElement('a');
                    var url = window.URL.createObjectURL(blob);
                    a.href = url;
                    a.download = fileName;
                    document.body.append(a);
                    a.click();
                    a.remove();
                    window.URL.revokeObjectURL(url);
                }
                , error: function (xhr, status, error) {
                    var err = JSON.parse(xhr.responseText);
                }
            });
        }

        var i = document.getElementById("Id");
        var ai = document.getElementById("ai");
        var ri = document.getElementById("ri");
        var ad = document.getElementById("ad");
        var rd = document.getElementById("rd");
        var ap = document.getElementById("ap");
        var re = document.getElementById("re");
        var rem = document.getElementById("Remarks");
        var v;
        $(ai).click(function () {
            ap.checked = true;
            v = "ai";
            re.checked = false;
        });

        $(ri).click(function () {
            re.checked = true;
            v = "ri";
            ap.checked = false;
        });

        $(ad).click(function () {
            ap.checked = true;
            v = "ad";
            re.checked = false;
        });

        $(rd).click(function () {
            re.checked = true;
            v = "rd";
            ap.checked = false;
        });

        $("#tss").click(function () {
            console.log(v)
            console.log(rem.value)
            //console.log(fileUpload.value);
            console.log(i.value)
            var fileUpload = document.querySelector("#fileToUpload");
            if (!fileUpload.files.length) {
                var fileData = new FormData();
                fileData.append("remarks", rem.value);
                fileData.append("pi", i.value);
                fileData.append("v", v);
                $.ajax({
                    url: '/prefiledcase/uploadfile',
                    type: 'post',
                    datatype: 'json',
                    contentType: false,
                    processData: false,
                    async: false,
                    data: fileData,
                    success: function (response) {
                        $('#successupload').modal('show');
                    }
                });


            }
            else {
                var files = fileUpload.files;
                var fileData = new FormData();
                for (var fi = 0; fi < files.length; fi++) {
                    fileData.append(files[fi].name, files[fi]);
                }
                fileData.append("remarks", rem.value);
                fileData.append("pi", i.value);
                fileData.append("v", v);

                $.ajax({
                    url: '/prefiledcase/uploadfile',
                    type: 'post',
                    datatype: 'json',
                    contentType: false,
                    processData: false,
                    async: false,
                    data: fileData,
                    success: function (response) {
                        $('#successupload').modal('show');
                    }
                });
            }
        });

        $("#reloadthis").click(function () {
            location.reload();
        });
    </script>

    <script type="text/javascript">

        const downloadButton = document.getElementById("download-button");

        downloadButton.addEventListener("click", () => {
            const imageUrl = document.getElementById("img-id").src;
            const link = document.createElement("a");
            link.href = imageUrl;
            link.download = "image";
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        });
    </script>

    <script type="text/javascript">
        /*pdf 1*/
        if (!document.getElementById("canvas-id")) {
            var url = document.getElementById("canvas-id").href;
            var pdfjsLib = window['pdfjs-dist/build/pdf'];

            var loadingTask = pdfjsLib.getDocument(url);
            loadingTask.promise.then(function (pdf) {

                var pageNumber = 1;
                pdf.getPage(pageNumber).then(function (page) {

                    var scale = 1;
                    var viewport = page.getViewport({ scale: scale });

                    var canvas = document.getElementById('the-canvas');
                    var context = canvas.getContext('2d');
                    canvas.height = viewport.height;
                    canvas.width = viewport.width;

                    var renderContext = {
                        canvasContext: context,

                        viewport: viewport
                    };
                    var renderTask = page.render(renderContext);
                    renderTask.promise.then(function () {
                    });
                });
            });
            /*pdf 2*/
            pdfUrl2 = document.getElementById("canvas-id-2")?.href;
            const pdfCanvas = document.getElementById("the-canvas-2");
            const pdfContext = pdfCanvas.getContext("2d");

            pdfjsLib.getDocument(pdfUrl2).promise.then(pdf => {
                pdf.getPage(1).then(page => {
                    const viewport = page.getViewport({ scale: 1 });
                    pdfCanvas.width = viewport.width;
                    pdfCanvas.height = viewport.height;

                    page.render({
                        canvasContext: pdfContext,
                        viewport: viewport
                    });
                });
            });
        }
    </script>

    <script type="text/javascript">
        $(function () {
            $('.pop').on('click', function () {
                $('.imagepreview').attr('src', $(this).find('img').attr('src'));
                $('#imagemodal').modal('show');
            });
        });

        $('#closeMediaModal').click(function () {
            $('#imagemodal').modal('hide');
            $('#pdfmodal').modal('hide');
        });

        let bd = document.getElementById('dl-btn');
        let img = document.querySelector('.imagepreview');
        bd.addEventListener('click', () => {
            let impath = img.getAttribute('src');
            let fn = getFileName(impath);
            saveAs(impath, fn);
        });
        function getFileName(str) {
            return str.substring(str.lastIndexOf('/') + 1);
        }
    </script>

    <script type="text/javascript">

    </script>
}

<style type="text/css">
        .thumbnail-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
        }

        .thumbnail {
            width: calc(25% - 10px);
            height: 100px;
            margin-bottom: 10px;
            border-width: 2px;
            border-style: solid;
            border-color: #3F5495;
            padding: 1px;
        }

        .od-group,
        .aa-group,
        .cf-group,
        .ac-group,
        .npi-group,
        .p-group,
        .sl-group,
        .a-group {
            display: flex;
        }

        .od1-container,
        .aa1-container,
        .cf1-container,
        .ac1-container,
        .npi1-container,
        .p1-container,
        .sl1-container,
        .a1-container {
            width: 60%;
            margin: 0;
        }

        .od2-container,
        .aa2-container,
        .cf2-container,
        .ac2-container,
        .npi2-container,
        .p2-container,
        .sl2-container,
        .a2-container {
            width: 40%;
            margin: 0;
        }

        .hidden {
            display: none;
        }

        td {
            padding: 10px 0 10px 0;
        }

        .text-blue-green {
            color: #499bb3;
        }

        .my-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr))
        }

        .my-card {
            height: 200px;
            width: 200px;
        }

        #the-canvas {
            direction: ltr;
            max-width: 300px;
        }

        .modal-dialog {
            position: relative;
            display: table; /* This is important */
            overflow-y: auto;
            overflow-x: auto;
            width: auto;
            min-width: 500px;
        }

        .rule {
            height: 4px;
            background: #bbbbbb;
        }

            .rule:before, .rule:after {
                content: '';
                height: 40px;
                width: 40px;
                border-radius: 25px;
                float: left;
                background: #bbbbbb;
                margin-top: -20px;
            }

            .rule:after {
                float: right;
            }

        .erc-text-dark-blue {
            color: #3a4360;
        }

        #msform .action-button-approve {
            width: 100px;
            background: #dcfcfc;
            color: #37b5b5;
            border: 0;
            border-radius: 5px;
        }

        #msform .action-button-decline {
            width: 100px;
            background: #ffe4e4;
            color: #ff0000;
            border: 0;
            border-radius: 5px;
        }

        #msform .action-button-discard {
            width: 100px;
            background: #f7e6c1;
            color: #e69e05;
            border: 0;
            border-radius: 5px;
        }

        #msform .action-button {
            width: 200px;
            background: #5069b1;
            color: white;
            border: 0 none;
            border-radius: 5px;
            cursor: pointer;
            padding: 10px 5px;
            margin: 10px 5px;
        }

            #msform .action-button:hover, #msform .action-button:focus {
                box-shadow: 0 0 0 2px white, 0 0 0 3px #5069b1;
            }

        #msform .action-button-previous {
            width: 200px;
            background: #d2d8e9;
            color: #000;
            border: 0 none;
            border-radius: 5px;
            cursor: pointer;
            padding: 10px 5px;
            margin: 10px 5px;
        }

            #msform .action-button-previous:hover, #msform .action-button-previous:focus {
                box-shadow: 0 0 0 2px white, 0 0 0 3px #d2d8e9;
            }

        .w-49 {
            width: 49.5%;
        }

        body {
            background: #edeff4 !important;
            /*        font-size: larger;
    */
        }

        .erc-text-blue {
            color: #6f83bc;
        }
</style>
