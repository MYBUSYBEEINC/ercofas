@model ERCOFAS.Models.PreRegistrationViewModel
@using ERCOFAS.CustomHelper
@using ERCOFAS.Models
@using ERCOFAS.Resources
@{
    ViewBag.Title = "View Pre-Registration";
    ViewBag.Module = "Pre-Registration";
    Layout = "~/Views/Shared/_LayoutAfterLogin.cshtml";
    ///CurrentUserPermission permission = User.Identity.IsAllowed(ProjectEnum.ModuleCode.PreRegistration.ToString());
}

<div class="row">
    <div class="col-12">
        <div style="--bs-breadcrumb-divider: '>';">
            <ol class="breadcrumb m-0">
                <li class="breadcrumb-item fw-normal"><a class="color-primarycolor opacity-50" href="@Url.Action("index")">Pre-Registration</a></li>
                <li class="breadcrumb-item fw-normal active">@ViewBag.Title</li>
            </ol>
        </div>
        <div class="page-title-box d-sm-flex align-items-center justify-content-between pt-2">
            <h4 class="pagetitle mb-sm-0 fw600">@ViewBag.Title</h4>
            <div class="d-flex">
        
                    <span class="fs-19">
                    <a href="@Url.Action("edit", new { Id = Model.Id })">
                        <i class="fa-solid fa-edit text-edit hover-color-secondarycolor" data-bs-toggle="tooltip" data-bs-placement="top" title="@Resource.Edit"></i></a>
                    </span>
             
     
                    <span class="fs-19">&nbsp; <i onclick="triggerDeleteConfirmationModal('@Model.FirstName', '@Url.Action("delete", new { id=Model.Id})')" class="fa-solid fa-trash-can text-delete cursor-pointer hover-color-secondarycolor" data-bs-toggle="tooltip" data-bs-placement="top" title="@Resource.Delete"></i></span>
            
            </div>
        </div>
    </div>
</div>

<section class="section mt-3">
    <div class="bg-white rounded p-3 p-lg-4 p-xl-5 shadow">
        <h2 class="fs-20 fw600 mb-4">@ViewBag.Module @Resource.Information</h2>
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3 text-break">
                    <div>@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "fw600" })</div>
                    <div>@Html.DisplayFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control d-block" } })</div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3 text-break">
                    <div>@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "fw600" })</div>
                    <div>@Html.DisplayFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })</div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3 text-break">
                    <div>@Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "fw600" })</div>
                    <div>@Html.DisplayFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })</div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3 text-break">
                    <div>@Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "fw600" })</div>
                    <div>@Html.DisplayFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })</div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3 text-break">
                    <div>@Html.LabelFor(model => model.RERTypeId, htmlAttributes: new { @class = "fw600" })</div>
                    <div>@Html.DisplayFor(model => model.RERTypeId, new { htmlAttributes = new { @class = "form-control" } })</div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3 text-break">
                    <div>@Html.LabelFor(model => model.RERClassificationId, htmlAttributes: new { @class = "fw600" })</div>
                    <div>@Html.DisplayFor(model => model.RERClassificationId, new { htmlAttributes = new { @class = "form-control d-block" } })</div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3 text-break">
                    <div>@Html.LabelFor(model => model.RegistrationStatusId, htmlAttributes: new { @class = "fw600" })</div>
                    @if (Model.RegistrationStatusId == "Pending")
                    {
                        <div class="badge bg-warning">@Html.DisplayFor(model => model.RegistrationStatusId, new { htmlAttributes = new { @class = "form-control" } })</div>
                    }
                    else if (Model.RegistrationStatusId == "Rejected")
                    {
                        <div class="badge bg-danger">@Html.DisplayFor(model => model.RegistrationStatusId, new { htmlAttributes = new { @class = "form-control" } })</div>

                    }
                    else
                    {
                        <div class="badge bg-success">@Html.DisplayFor(model => model.RegistrationStatusId, new { htmlAttributes = new { @class = "form-control" } })</div>

                    }
                </div>
            </div>
        </div>
        <div class="row">
            @if (Model.Attachments.Count > 0)
            {
                <p><strong>List of Uploaded Document(s)</strong></p>
                <ul class="list-group">
                    @foreach (var item in Model.Attachments)
                    {
                        <li class="list-group-item">
                            @Html.DisplayFor(modelItem => item.UniqueFileName)
                        </li>
                    }
                </ul>
            }
            else
            {
                <i>No uploaded document yet.</i>
            }
        </div>
        <br>
        <div class="row">
            <div class="col-lg-6">
                <a class="btn btn-p8 hover-boxshadow me-1 addnewbtn bg-danger" style="color: #000000" onclick="triggerRejectConfirmationModal('@Model.FirstName', '@Url.Action("reject", new { Id= Model.Id})')">@Resource.Reject</a>
                <a class="btn btn-p8 hover-boxshadow me-1 addnewbtn bg-success" style="color: #000000" onclick="triggerApproveConfirmationModal('@Model.FirstName', '@Url.Action("approve", new { Id= Model.Id})')">@Resource.Approve</a>
            </div>

        </div>
    </div>
    <div class="row mt-4">
        <div class="col-12">
            <a class="btn btn-p8 bg-light hover-boxshadow me-1" href="@Url.Action("index")">@Resource.BackToList</a>
 
                <a class="btn btn-p8 hover-boxshadow me-1 addnewbtn hover-bg-primarycolor" href="@Url.Action("edit", new { Id = Model.Id})">@Resource.Edit @ViewBag.Module</a>

        </div>
    </div>
</section>
