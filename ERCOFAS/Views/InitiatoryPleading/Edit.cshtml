@model ERCOFAS.Models.InitiatoryPleadingModel
@using ERCOFAS.CustomHelper
@using ERCOFAS.Resources
@{
    if (string.IsNullOrEmpty(Model.Id))
    {
        ViewBag.Title = Resource.Add + " Initiatory Pleading";
    }
    else
    {
        ViewBag.Title = Resource.Edit + " Initiatory Pleading";
    }
    Layout = "~/Views/Shared/_LayoutAfterLogin.cshtml";
}

<div class="row">
    <div class="col-12">
        <div style="--bs-breadcrumb-divider: '>';">
            <ol class="breadcrumb m-0">
                <li class="breadcrumb-item fw-normal">
                    <a class="color-primarycolor opacity-50" href="@Url.Action("index")">Initiatory Pleadings</a>
                </li>
                @if (!string.IsNullOrEmpty(Model.Id))
                {
                    <li class="breadcrumb-item fw-normal"><a class="color-primarycolor opacity-50" href="@Url.Action("viewrecord", new { Id = Model.Id})">View Initiatory Pleading</a></li>
                }
                <li class="breadcrumb-item fw-normal active">@ViewBag.Title</li>
            </ol>
        </div>
        <div class="page-title-box d-sm-flex align-items-center justify-content-between pt-2">
            <h4 class="pagetitle mb-sm-0 fw600">@ViewBag.Title</h4>
        </div>
    </div>
</div>

@using (Html.BeginForm("Edit", "InitiatoryPleading", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new
{
    @class = "form-horizontal",
    role = "form",
    enctype = "multipart/form-data"
}))
{
    <section class="section mt-3">
        <div class="bg-white rounded p-3 p-lg-4 p-xl-5 shadow">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DocumentName, htmlAttributes: new { @class = "form-label required fw600" })
                        @Html.EditorFor(model => model.DocumentName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DocumentName, "", new { @class = "invalid-message" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Barcode, htmlAttributes: new { @class = "form-label required fw600" })
                        @Html.EditorFor(model => model.Barcode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Barcode, "", new { @class = "invalid-message" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.LabelFor(model => model.DocketNumber, htmlAttributes: new { @class = "form-label required fw600" })
                    @Html.EditorFor(model => model.DocketNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DocketNumber, "", new { @class = "invalid-message" })
                </div>
            </div>
            <div class="row mt-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label fw600" })
                    @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control", @rows = "3" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "invalid-message" })
                </div>
            </div>
            <div class="row mt-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.Documents, htmlAttributes: new { @class = "form-label fw600" }) <i class="fa-solid fa-circle-info align-middle" data-bs-toggle="tooltip" data-bs-placement="top" title="You can upload multiple files here."></i>
                    @Html.TextBox("Documents", "", new { @type = "file", @class = "form-control", @multiple = true })
                    @Html.ValidationMessageFor(model => model.Documents, "", new { @class = "invalid-message" })
                </div>
            </div>
            <hr />
            @if (Model.Attachments != null && Model.Attachments.Count > 0)
            {
                <p><strong>List of Uploaded Document(s)</strong></p>
                <ul class="list-group">
                    @foreach (var item in Model.Attachments)
                    {
                        <li class="list-group-item">
                            @Html.DisplayFor(modelItem => item.UniqueFileName)
                            <span class="fs-19 canedit">
                                <a href="~/Documents/@item.UniqueFileName" data-bs-placement="right" title="Download" download>
                                    <i class="fa-solid fa-download text-edit hover-color-secondarycolor" data-bs-toggle="tooltip" data-bs-placement="top" title="Download"></i>
                                </a> &nbsp;
                            </span>
                            <span class="fs-19 candelete" onclick="triggerDeleteConfirmationModal('@item.UniqueFileName', '@Url.Action("deletefile", new { id= item.Id})')">
                                <i class="fa-solid fa-trash-can text-delete hover-color-secondarycolor cursor-pointer" data-bs-toggle="tooltip" data-bs-placement="top" title="Delete"></i>
                            </span>
                        </li>
                    }
                </ul>
            }
            else
            {
                <i>No uploaded document yet.</i>
            }
        </div>
        <div class="row mt-4">
            <div class="col-12">
                <a type="button" class="btn btn-p8 bg-light hover-boxshadow me-1" href="@Url.Action("index")">@Resource.BackToList</a>
                @if (Model.SystemDefault == false)
                {
                    <button type="button" class="addnewbtn btn btn-p8 submit-initiatory hover-boxshadow hover-bg-primarycolor">@Resource.Save</button>
                }
            </div>
        </div>
    </section>
}

@section Scripts {
 
    <script>

        $(document).ready(function () {

            $(".submit-initiatory").click(function () {
                
                //if (!validateForm())
                //    return;
                                
                $(".form-horizontal").submit();
            });
        });

        function validateForm() {

            var form, input, i, valid = true;
            form = document.getElementsByClassName("form-group");
            input = form.getElementsByTagName("input");

            for (i = 0; i < input.length; i++) {

                var inputValue = input[i].value;
                if ((inputValue === "" || inputValue === "0") && $(input[i]).next().hasClass("invalid-message")) {
                    $(input[i]).next().html("Required");
                    valid = false;
                } else if (inputValue === "null" && $(input[i]).hasClass("custom-option")) {
                    $(".select-invalid-message").html("Required");
                    valid = false;
                }
            }

            return valid;
        }

    </script>

}
