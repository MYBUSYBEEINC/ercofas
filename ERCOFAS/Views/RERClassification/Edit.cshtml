@model NetStarter.Models.RERClassificationViewModel
@using NetStarter.CustomHelper
@using NetStarter.Resources
@{
    if (string.IsNullOrEmpty(Model.Id))
    {
        ViewBag.Title = "Add RER Classification";
    }
    else
    {
        ViewBag.Title = "Edit "+@Model.DisplayName;
    }
    Layout = "~/Views/Shared/_LayoutAfterLogin.cshtml";
}

<div class="row">
    <div class="col-12">
        <div style="--bs-breadcrumb-divider: '>';">
            <ol class="breadcrumb m-0">
                <li class="breadcrumb-item fw-normal">
                    <a class="color-primarycolor opacity-50" href="@Url.Action("index")">RER Classifications</a>
                </li>
                <li class="breadcrumb-item fw-normal active">@ViewBag.Title</li>
            </ol>
        </div>
        <div class="page-title-box d-sm-flex align-items-center justify-content-between pt-2">
            <h4 class="pagetitle mb-sm-0 fw600">@ViewBag.Title</h4>
        </div>
    </div>
</div>

@using (Html.BeginForm("Edit", "RERClassification", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <section class="section mt-3">
        <div class="bg-white rounded p-3 p-lg-4 p-xl-5 shadow">
            <div class="row">
                <div class="col-md-8">
                    <div class="mb-3 text-break">
                        <div class="form-group">
                            <div class="label-container">
                                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "form-label required fw600" })
                            </div>
                            <div class="input-container">
                                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "invalid-message" })
                        </div>
                    </div>
                </div>
                <br />
                <div class="col-md-8">
                    <div class="mb-3 text-break">
                        <div class="form-group">
                            <div class="label-container">
                                @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "form-label required fw600" })
                            </div>
                            <div class="input-container">
                                @Html.TextAreaFor(model => model.DisplayName, new { @class = "border rounded w-100 p-4 mt-4", @rows = "5", @cols = "50" })
                            </div>
                            @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "invalid-message" })
                        </div>
                    </div>
                </div>
            </div>
            @if (string.IsNullOrEmpty(Model.Id))
            {

            }
            else
            {
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3 text-break">
                            <div class="form-group">
                                <div class="label-container">
                                    @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "form-label fw600" }):
                                </div>
                                <div class="input-container">
                                    @Html.DisplayFor(model => model.CreatedBy, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3 text-break">
                            <div class="form-group">
                                <div class="label-container">
                                    @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "form-label fw600" }):
                                </div>
                                <div class="input-container">
                                    @Html.DisplayFor(model => model.CreatedOn, new { @class = "form-control" })
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3 text-break">
                            <div class="form-group">
                                <div class="label-container">
                                    @Html.LabelFor(model => model.ModifiedBy, htmlAttributes: new { @class = "form-label fw600" }):
                                </div>
                                <div class="input-container">
                                    @Html.DisplayFor(model => model.ModifiedBy, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3 text-break">
                            <div class="form-group">
                                <div class="label-container">
                                    @Html.LabelFor(model => model.ModifiedOn, htmlAttributes: new { @class = "form-label fw600" }):
                                </div>
                                <div class="input-container">
                                    @Html.DisplayFor(model => model.ModifiedOn, new { @class = "form-control" })
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="row mt-4">
            <div class="col-12">
                <a type="button" class="btn btn-p8 bg-light hover-boxshadow me-1" href="@Url.Action("index")">@Resource.BackToList</a>

                    <button type="submit" class="addnewbtn btn btn-p8 hover-boxshadow hover-bg-primarycolor">@Resource.Save</button>
         
            </div>
        </div>
    </section>
}

<style>
    .form-group {
        display: flex;
    }

    .label-container {
        width: 20%;
    }

    .input-container {
        width: 80%;
    }
    .w-100{
        margin-left: 0;
    }
    .form-group-container{
        width: 40%;
    }
    .form-group-container-s{
        width: 20%;
    }
</style>